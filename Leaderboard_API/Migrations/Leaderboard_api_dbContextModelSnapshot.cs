// <auto-generated />
using System;
using Leaderboard_API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Leaderboard_API.Migrations
{
    [DbContext(typeof(Leaderboard_api_dbContext))]
    partial class Leaderboard_api_dbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("Leaderboard_API.Models.Levels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("levels");
                });

            modelBuilder.Entity("Leaderboard_API.Models.Players", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CountryCode")
                        .HasColumnType("integer")
                        .HasColumnName("country_code");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("character varying")
                        .HasColumnName("user_name");

                    b.HasKey("Id");

                    b.ToTable("players");
                });

            modelBuilder.Entity("Leaderboard_API.Models.Scores", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("HighScore")
                        .HasColumnType("integer")
                        .HasColumnName("high_score");

                    b.Property<int>("LevelId")
                        .HasColumnType("integer")
                        .HasColumnName("level_id");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer")
                        .HasColumnName("player_id");

                    b.Property<int>("TimeInSeconds")
                        .HasColumnType("integer")
                        .HasColumnName("time_in_seconds");

                    b.Property<DateTime>("TimeStamp")
                        .HasColumnType("timestamp without time zone")
                        .HasColumnName("time_stamp");

                    b.HasKey("Id");

                    b.HasIndex("LevelId");

                    b.HasIndex("PlayerId");

                    b.ToTable("scores");
                });

            modelBuilder.Entity("Leaderboard_API.Models.Scores", b =>
                {
                    b.HasOne("Leaderboard_API.Models.Levels", "Level")
                        .WithMany("Scores")
                        .HasForeignKey("LevelId")
                        .HasConstraintName("scores_level_id_fkey")
                        .IsRequired();

                    b.HasOne("Leaderboard_API.Models.Players", "Player")
                        .WithMany("Scores")
                        .HasForeignKey("PlayerId")
                        .HasConstraintName("scores_player_id_fkey")
                        .IsRequired();

                    b.Navigation("Level");

                    b.Navigation("Player");
                });

            modelBuilder.Entity("Leaderboard_API.Models.Levels", b =>
                {
                    b.Navigation("Scores");
                });

            modelBuilder.Entity("Leaderboard_API.Models.Players", b =>
                {
                    b.Navigation("Scores");
                });
#pragma warning restore 612, 618
        }
    }
}
